#!/bin/bash

trap 'exit' INT

PLATFORM=${1:-}
MODE=${2:-local}

# Validate passed arguments
case $PLATFORM in
  ios | android )
    ;;

  *)
    echo "Error! You must pass either 'android' or 'ios'"
    echo ""
    exit 1
    ;;
esac

case $MODE in
  local | pipeline )
    ;;

  *)
    echo "Error! You must pass either 'local' or 'pipeline'"
    echo ""
    exit 1
    ;;
esac

if [ "$PLATFORM" == "ios" ]; then
  APPID="com.tyro.example-pay-api-app"
  allTestFiles=$(ls ./src/tests/integration/*.yml ./src/tests/integration/ios/*.yml)
  allDevices=$(xcrun simctl list devices booted | grep -o '[0-9A-Z]\{8\}-[0-9A-Z]\{4\}-[0-9A-Z]\{4\}-[0-9A-Z]\{4\}-[0-9A-Z]\{12\}')
else
  APPID="com.example"
  allTestFiles=$(ls ./src/tests/integration/*.yml ./src/tests/integration/android/*.yml)
  allDevices=$(adb devices | grep -o 'emulator-[0-9]\{4\}') 
fi

run_tests(){
  DEVICE="$1"
  for file in $allTestFiles
    do
      if ! maestro --device "$DEVICE" test "$file" -e APP_ID="$APPID";
      then
        echo "Test ${file} failed. Retrying in 30 seconds..."
        sleep 30
        if ! maestro --device "$DEVICE" test "$file" -e APP_ID="$APPID";
        then
          echo "Test ${file} failed again. Retrying for the last time in 120 seconds..."
          sleep 120
          if ! maestro --device "$DEVICE" test "$file" -e APP_ID="$APPID";
          then
            failedTests+=("$DEVICE-$file")
          fi
        fi
      fi
    done
}

if [ -z "$allDevices" ]; then
    echo "No running devices found!"
    exit 1
fi

failedTests=()
if [ "$MODE" == "local" ]; then
  for device in $allDevices
    do run_tests $device
    done
else
  run_tests ${allDevices[0]}
fi

if [ ${#failedTests[@]} -eq 0 ]; then
    exit 0
else
    echo "These tests failed:"
    printf '%s\n' "${failedTests[@]}"
    exit 1
fi
